@model Customer
@{
 
}
<style>
 label, .form-control{
     font-size:16px;
 }
  body{
      background-color:black;
  }
</style>

<header class="masthead text-center text-white ">
    <center>
        <div class="container masthead-content">

            <h2>@ViewBag.AptName </h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                if (ViewBag.AptID>0)
                {
                @Html.Hidden("ApartmentID", (int)ViewBag.AptID)
                }
            <div class="form-horizontal">
                <h4>Fill the Below form fo Enquiry</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.SName, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.SName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RequestStr,"Type you request:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.TextAreaFor(model => model.RequestStr, new { @class = "form-control " } )
                        @Html.ValidationMessageFor(model => model.RequestStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Send Query" class="btn btn-success btn-lg" />
                    </div>
                </div>
            </div>
            }
            <br />
            <br />
            <br />
        </div>
    </center>

</header>